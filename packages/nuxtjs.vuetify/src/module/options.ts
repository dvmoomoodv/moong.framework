import { resolveFrameworkModulePath } from '#ustra/nuxt/kit'
import { resolve } from 'pathe'
import { addTemplate } from '@nuxt/kit'
import { Nuxt } from '@nuxt/schema'
import { NuxtAppProps } from '#ustra/nuxt/config'

export const options = (options: NuxtAppProps, nuxt: Nuxt) => {
  // add auto imports
  nuxt.hook('imports:dirs', dirs => {
    dirs.push(resolveFrameworkModulePath('#ustra/nuxt-vuetify/composables'))
  })

  // add types
  nuxt.hook('prepare:types', ({ references }) => {
    // references.push({ types: 'vuetify' })
    references.push({ path: resolve(nuxt.options.buildDir, 'types/ustra-vuetify.d.ts') })
  })

  // add configuration properties
  addTemplate({
    filename: 'types/ustra-vuetify.d.ts',
    write: true,
    getContents: () => {
      return `// Generated by U.STRA
import { MOptions, VOptions } from 'vuetify-nuxt-module'
import { Ustra } from '@ustra/nuxt/src/plugins/ustra'


type UstraVuetifyOptionsProp = {

  /**
   * vuetify nuxt module options
   * @see https://vuetify-nuxt-module.netlify.app/guide/
   */
  moduleOptions?: MOptions

  /**
   * vuetify options
   * @see https://vuetify-nuxt-module.netlify.app/guide/
   */
  vuetifyOptions?: VOptions

}

declare module '@ustra/nuxt/src/config/props/vuetify' {
  interface VuetifyOptions extends UstraVuetifyOptionsProp {}
}

declare module '#ustra/nuxt/config/props/vuetify' {
  interface VuetifyOptions extends UstraVuetifyOptionsProp {}
}

export { }
  `
    },
  })
}
